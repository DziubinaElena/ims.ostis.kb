agent_of_counting_nodes_in_structure
=> nrel_main_idtf:
	[агентная scp-программа подсчета количества узлов в струтуре] (* <- lang_ru;; *);
=> nrel_main_idtf:
	[agent scp-program of counting number of nodes in structure] (* <- lang_en;; *);
<- agent_scp_program;;

scp_program -> agent_of_counting_nodes_in_structure
	(*
	-> rrel_params: .agent_of_counting_nodes_in_structure_params 
		(*
		-> rrel_1: rrel_in: _event;;
		-> rrel_2: rrel_in: _input_arc;;
		*);;

	-> rrel_operators: .agent_of_counting_nodes_in_structure_operator_set 
		(*
		-> rrel_init: .agent_of_counting_nodes_in_structure_operator1A
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_assign: rrel_scp_var: _temp;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _input_arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _quest;;

			=> nrel_goto: .agent_of_counting_nodes_in_structure_operator1B;;
			*);;
				 
		-> .agent_of_counting_nodes_in_structure_operator1B
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: action_to_count_nodes_in_structure;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_then: .agent_of_counting_nodes_in_structure_operator2;;
			=> nrel_else: .agent_of_counting_nodes_in_structure_operator_return;;
			*);;

		-> .agent_of_counting_nodes_in_structure_operator2
			(*
			<- searchElStr5;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: rrel_sctruct: _pattern;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_1;;

			=> nrel_then: .agent_of_counting_nodes_in_structure_operator3A;;
			=> nrel_else: .agent_of_counting_nodes_in_structure_operator_validation_failed;;
			*);;

		-> .agent_of_counting_nodes_in_structure_operator3A
			(*
			<- searchElStr5;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _search_in_substructures;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_2;;

			=> nrel_then: .agent_of_counting_nodes_in_structure_operator3B;;
			=> nrel_else: .agent_of_counting_nodes_in_structure_operator3D;;
			*);;

		-> .agent_of_counting_nodes_in_structure_operator3B
			(*
			<- call;;

			-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_adding_validating_message;;
			-> rrel_2: rrel_fixed: rrel_scp_const: .agent_of_counting_nodes_in_structure_operator3B_params 
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [Not implemented.];;
				*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr1;;

			=> nrel_goto: .agent_of_counting_nodes_in_structure_operator3C;;
			*);;

		-> .agent_of_counting_nodes_in_structure_operator3C
			(*
			<- waitReturn;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_of_counting_nodes_in_structure_operator_return;;
			*);;

		-> .agent_of_counting_nodes_in_structure_operator3D
			(*
			<- call;;

			-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_counting_nodes_in_structure;;
			-> rrel_2: rrel_fixed: rrel_scp_const: .agent_of_counting_nodes_in_structure_operator3D_params 
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _pattern;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [false];;
				-> rrel_3: rrel_assign: rrel_scp_var: _number_of_nodes;;
				*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_of_counting_nodes_in_structure_operator3E;;
			*);;

		-> .agent_of_counting_nodes_in_structure_operator3E
			(*
			<- waitReturn;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_of_counting_nodes_in_structure_operator_gen_answer;;
			*);;

		-> .agent_of_counting_nodes_in_structure_operator_gen_answer
			(*
			<- call;;

			-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_generation_of_metrics_answer;;
			-> rrel_2: rrel_fixed: rrel_scp_const: .agent_of_counting_nodes_in_structure_operator_gen_answer_params 
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
				-> rrel_2: rrel_fixed: rrel_scp_const: action_to_count_nodes_in_structure;;
				-> rrel_3: rrel_fixed: rrel_scp_var: _number_of_nodes;;
				*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr3;;

			=> nrel_goto: .agent_of_counting_nodes_in_structure_operator_gen_answer_wait_return;;
			*);;

		-> .agent_of_counting_nodes_in_structure_operator_gen_answer_wait_return
			(*
			<- waitReturn;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _descr3;;

			=> nrel_goto: .agent_of_counting_nodes_in_structure_operator_question_finished_successfully;;
			*);;

		-> .agent_of_counting_nodes_in_structure_operator_question_finished_successfully
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_successfully;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_goto: .agent_of_counting_nodes_in_structure_operator_return;; 
			*);;

		-> .agent_of_counting_nodes_in_structure_operator_validation_failed
			(*
			<- call;;

			-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_adding_validating_message;;
			-> rrel_2: rrel_fixed: rrel_scp_const: .agent_of_counting_nodes_in_structure_operator_validation_failed_params 
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [Wrong first parameter! It must be a structure(rrel_struct).];;
				*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr3;;

			=> nrel_goto: .agent_of_counting_nodes_in_structure_operator_validation_failed_wait;;
			*);;

		-> .agent_of_counting_nodes_in_structure_operator_validation_failed_wait
			(*
			<- waitReturn;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _descr3;;

			=> nrel_goto: .agent_of_counting_nodes_in_structure_operator_return;;
			*);;

		-> .agent_of_counting_nodes_in_structure_operator_return
			(*
			<- return;;
			*);;
		*);;
	*);;
